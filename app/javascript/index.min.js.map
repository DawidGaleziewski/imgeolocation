{"version":3,"sources":["node_modules/browser-pack/_prelude.js","javascript/index.js","javascript/modules/AlertHandler.js","javascript/modules/DOMTemplateHandler.js","javascript/modules/ImageGeolocationHandler.js","javascript/modules/MapHandler.js","javascript/modules/UploadFileHandler.js","javascript/modules/ValidateHandler.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_UploadFileHandler","_interopRequireDefault","_MapHandler","UIinput","document","querySelector","UIoutput","uploadImage","removeImage","startMap","AlertHandler","displayError","errors","errorDurationTime","errorMessages","Object","keys","filter","key","isCorrect","map","description","forEach","errorMessage","errorTemplate","createElement","className","errorText","innerText","concat","appendChild","prepend","setTimeout","removeChild","_ImageGeolocationHandler","DOMTemplateHandler","singleImageTemplate","fileObject","sizeDiv","classList","add","cardDiv","cardImageDiv","cardTitleSpan","cardContent","cardAction","pictureInfoList","image","fileExtension","fileSize","fileGeoLocation","removeButton","src","URL","createObjectURL","name","type","size","onload","returnLongLat","longLat","longitude","latitude","setView","setMarker","setAttribute","ImageGeolocationHandler","_toDecimal","number","numerator","denominator","imgHTMLElement","callback","EXIF","getData","getTag","this","MapHandler","_mymap","L","tileLayer","attribution","maxZoom","id","accessToken","addTo","longLatObject","panTo","LatLng","markersArray","addMarker","fileName","push","objectReference","marker","bindPopup","_removeMarker","index","console","log","removeLayer","splice","removeButtonOnClickHandler","UIremoveButton","longLatRaw","getAttribute","split","longLatObj","parseFloat","_ValidateHandler","_AlertHandler","_DOMTemplateHandler","UploadFileHandler","imageUploadHandler","fileInput","outputContainer","addEventListener","event","Array","from","target","files","file","validateImage","hasGPSData","goodFileSize","validFileExtension","removeImageHandler","imagesContainer","contains","card","parentElement","remove","ValidateHandler","_validateGPSData","valid","validateFileSize","fileSizeLimitKB","fileSizeKB","validateFileExtension","acceptableFileExtensionsArray","includes","gpsIsValid"],"mappings":"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","file":"index.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","//###1. index.js\n//- main app entry file ###\n\n//###2. UploadFileHandler.js\n//- module handling file upload handling\n\n//###3. ImageGeolocationHandler\n//-module handling EXIF api returning longitude and latitude information.\n\n//###4. AlertHandler.js\n//-module handling alert display in case of failed validation\n\n//###5. ValidateHandler.js\n//- module handling validation criteria: file size, file format, required EXIF data\n\n//###6. MapHandler.js\n//- module handling the map api and actions like: adding markers, removing markers. changing current view\n\n//###7. DOMTemplateHandler\n//Responsible for creating html elements/nodes in js, adding classes to them etc\n\n//## Imports ##\nimport UploadFileHandler from './modules/UploadFileHandler';\nimport MapHandler from './modules/MapHandler';\n\n//## Global variables\nconst UIinput = document.querySelector('#upload-file__image');\nconst UIoutput = document.querySelector('#upload-preview');\n\n//## Project start modules\n//Handling images upload to the site\nUploadFileHandler.uploadImage(UIinput, UIoutput);\nUploadFileHandler.removeImage(UIoutput);\nMapHandler.startMap();\n","//###4. AlertHandler.js\n//-module handling alert display in case of failed validation\n//#functions\n//displayError - accepts errors object and shows them in the DOM.\n//- accepts duration of which error should be displayed.\n\nconst AlertHandler = (function() {\n  function displayError(errors, UIoutput, errorDurationTime) {\n    //Convert errors to array of error messages\n    const errorMessages = Object.keys(errors)\n      .filter(function(key) {\n        return errors[key].isCorrect === false;\n      })\n      .map(function(key) {\n        return errors[key].description;\n      });\n\n    errorMessages.forEach(function(errorMessage) {\n      const errorTemplate = document.createElement('div');\n      errorTemplate.className = 'card alert';\n      const errorText = document.createElement('span');\n      errorText.className = 'error-text';\n      errorText.innerText = `Error: ${errorMessage}`;\n      errorTemplate.appendChild(errorText);\n\n      UIoutput.prepend(errorTemplate);\n      setTimeout(function() {\n        UIoutput.removeChild(errorTemplate);\n      }, errorDurationTime);\n    });\n  }\n\n  return {\n    displayError: displayError\n  };\n})();\n\nexport default AlertHandler;\n","//###7. DOMTemplateHandler\n//Responsible for creating html elements/nodes in js, adding classes to them etc\n\nimport ImageGeolocationHandler from './ImageGeolocationHandler';\nimport MapHandler from './MapHandler';\n\nconst DOMTemplateHandler = (function() {\n  function singleImageTemplate(fileObject) {\n    //Materializecss DOM elements\n    const sizeDiv = document.createElement('div');\n    sizeDiv.classList.add('col');\n    sizeDiv.classList.add('m4');\n    const cardDiv = document.createElement('div');\n    cardDiv.classList.add('card');\n    // cardDiv.classList.add('col');\n    const cardImageDiv = document.createElement('div');\n    cardImageDiv.classList.add('card-image');\n    const cardTitleSpan = document.createElement('span');\n    cardTitleSpan.classList.add('card-title');\n    const cardContent = document.createElement('div');\n    cardContent.classList.add('card-content');\n    const cardAction = document.createElement('div');\n    cardAction.classList.add('card-action');\n\n    //Create DOM elements with data\n    const pictureInfoList = document.createElement('ul');\n    pictureInfoList.classList.add('collection');\n    const image = document.createElement('img');\n    const fileExtension = document.createElement('li');\n    fileExtension.classList.add('collection-item');\n    const fileSize = document.createElement('li');\n    fileSize.classList.add('collection-item');\n    let fileGeoLocation = document.createElement('li');\n    fileGeoLocation.classList.add('collection-item');\n    const removeButton = document.createElement('li');\n\n    //Update DOM elements with data\n    image.src = URL.createObjectURL(fileObject);\n    cardTitleSpan.innerText = `File name: ${fileObject.name}`;\n    fileExtension.innerText = `File extension: ${fileObject.type}`;\n    fileSize.innerText = `File size: ${fileObject.size}`;\n    removeButton.innerText = 'remove item';\n    removeButton.classList.add('btn-remove');\n    removeButton.classList.add('btn');\n    removeButton.classList.add('red');\n\n    image.onload = function() {\n      ImageGeolocationHandler.returnLongLat(image, function(longLat) {\n        fileGeoLocation.innerText = `Picture was taken on long/lat: ${longLat.longitude}, ${longLat.latitude}`;\n        MapHandler.setView(longLat);\n        MapHandler.setMarker(longLat, fileObject.name);\n\n        //Adding data to button for easy removal of the object on map\n        removeButton.setAttribute(\n          'name',\n          `longlat#${longLat.longitude}#${longLat.latitude}`\n        );\n      });\n    };\n\n    //Update the parent list\n    cardImageDiv.appendChild(image);\n    cardImageDiv.appendChild(cardTitleSpan);\n    pictureInfoList.appendChild(cardImageDiv);\n    pictureInfoList.appendChild(fileExtension);\n    pictureInfoList.appendChild(fileSize);\n    pictureInfoList.appendChild(fileGeoLocation);\n    cardAction.appendChild(removeButton);\n    cardContent.appendChild(pictureInfoList);\n    cardDiv.appendChild(cardImageDiv);\n    cardDiv.appendChild(cardContent);\n    cardDiv.appendChild(cardAction);\n    sizeDiv.appendChild(cardDiv);\n\n    return sizeDiv;\n  }\n\n  return {\n    singleImageTemplate: singleImageTemplate\n  };\n})();\n\nexport default DOMTemplateHandler;\n","//###3. ImageGeolocationHandler\n//-module handling EXIF api returning longitude and latitude information.\n//#functions\n//-_toDecimal - helper with changing array returned by EXIF.js api into decimal value - private function\n//-returnLongLat - returning longitude and latitude from api in object format.\n//-operations need to be done in callback function due to async nature of EXIF api.\n\nconst ImageGeolocationHandler = (function() {\n  //Helper function returning longitude and latitude as a float\n  const _toDecimal = function(number) {\n    return (\n      number[0].numerator +\n      number[1].numerator / (60 * number[1].denominator) +\n      number[2].numerator / (3600 * number[2].denominator)\n    );\n  };\n\n  function returnLongLat(imgHTMLElement, callback) {\n    //function accepting the image and callback returning the data\n    EXIF.getData(imgHTMLElement, function() {\n      let longitude = _toDecimal(EXIF.getTag(this, 'GPSLongitude'));\n      let latitude = _toDecimal(EXIF.getTag(this, 'GPSLatitude'));\n\n      const longLat = {\n        longitude: longitude,\n        latitude: latitude\n      };\n\n      callback(longLat);\n    });\n  }\n\n  //Public functions\n  return {\n    returnLongLat: returnLongLat\n  };\n})();\n\nexport default ImageGeolocationHandler;\n","//###6. MapHandler.js\n//- module handling the map api and actions like: adding markers, removing markers. changing current view\n//#functions\n//- startMap - creates MAP object and binds it to the DOM.\n//- setView - changes the location the map is focused on. Accepts object with longitude and latitude\n//- addMarker - adds marker on the map. Accepts object with longitude and latitude.\n//- _removeMarker - removes marker on the map. Private function\n//- removeButtonOnClickHandler - collects data needed to locate object referance of a marker and remove it from dom\n\nconst MapHandler = (function() {\n  var _mymap = L.map('mapid').setView([51.505, -0.09], 13);\n  function startMap() {\n    L.tileLayer(\n      'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}',\n      {\n        attribution:\n          'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        maxZoom: 18,\n        id: 'mapbox.streets',\n        accessToken:\n          'pk.eyJ1IjoiZGF3aWRnYWxlemlld3NraWRldiIsImEiOiJjazF5MmtrenUwY21mM29uc3R2NWY2eG80In0.tnl8PPwx5p-xDKirHF6O2Q'\n      }\n    ).addTo(_mymap);\n  }\n\n  function setView(longLatObject) {\n    _mymap.panTo(new L.LatLng(longLatObject.latitude, longLatObject.longitude));\n  }\n\n  var markersArray = [];\n  function addMarker(longLatObject, fileName) {\n    markersArray.push({\n      latitude: longLatObject.latitude,\n      longitude: longLatObject.longitude,\n      objectReference: new L.marker([\n        longLatObject.latitude,\n        longLatObject.longitude\n      ])\n        .bindPopup(`Picture name: ${fileName}`)\n        .addTo(_mymap)\n    });\n  }\n\n  function _removeMarker(longLatObject) {\n    markersArray.forEach(function(marker, index) {\n      console.log(marker.longitude, longLatObject.longitude);\n      if (marker.longitude === longLatObject.longitude) {\n        //Remove marker from the map using the object referance\n        _mymap.removeLayer(marker.objectReference);\n\n        //Remove marker from the array\n        markersArray.splice(index, 1);\n\n        console.log('bang', markersArray);\n      }\n    });\n  }\n\n  function removeButtonOnClickHandler(UIremoveButton) {\n    //Covert the data stored in button dom to object\n    const longLatRaw = UIremoveButton.getAttribute('name').split('#');\n    const longLatObj = {\n      longitude: parseFloat(longLatRaw[1]),\n      latitude: parseFloat(longLatRaw[2])\n    };\n\n    _removeMarker(longLatObj);\n  }\n\n  return {\n    startMap: startMap,\n    setMarker: addMarker,\n    setView: setView,\n    removeButtonOnClickHandler: removeButtonOnClickHandler\n  };\n})();\n\nexport default MapHandler;\n","//###2. UploadFileHandler.js\n//- module handling file upload handling\n//#Functions\n//-imageUploadHandle -uploading file to the site\n//-removeImageHandler - removing image and metadata\n\nimport ImageGeolocationHandler from './ImageGeolocationHandler';\nimport ValidateHandler from './ValidateHandler';\nimport AlertHandler from './AlertHandler';\nimport MapHandler from './MapHandler';\nimport DOMTemplateHandler from './DOMTemplateHandler';\n\nconst UploadFileHandler = (function(ImageGeolocationHandler) {\n  function imageUploadHandler(fileInput, outputContainer) {\n    //Add on change event handler to upload image to website\n    fileInput.addEventListener('change', function(event) {\n      const fileInput = Array.from(event.target.files);\n      fileInput.forEach(function(file) {\n        ValidateHandler.validateImage(file, function(errors) {\n          // console.log(errors)\n          if (\n            errors.hasGPSData.isCorrect &&\n            errors.goodFileSize.isCorrect &&\n            errors.validFileExtension.isCorrect\n          ) {\n            //Create single uploaded image and add metadata\n            outputContainer.appendChild(\n              DOMTemplateHandler.singleImageTemplate(file)\n            );\n            //Add marker to map\n          } else {\n            AlertHandler.displayError(\n              errors,\n              document.querySelector('.container'),\n              6000\n            );\n          }\n        });\n      });\n    });\n  }\n\n  function removeImageHandler(imagesContainer) {\n    imagesContainer.addEventListener('click', function(event) {\n      if (event.target.classList.contains('btn-remove')) {\n        const card = event.target.parentElement.parentElement.parentElement;\n\n        //Remove marker from map\n        MapHandler.removeButtonOnClickHandler(event.target);\n\n        //Remove picture card from DOM\n        card.remove();\n      }\n    });\n  }\n\n  return {\n    uploadImage: imageUploadHandler,\n    removeImage: removeImageHandler\n  };\n})(ImageGeolocationHandler);\n\nexport default UploadFileHandler;\n","//###5. ValidateHandler.js\n//- module handling validation criteria: file size, file format, required EXIF data\n//#functions:\n//validateImage - public function bootstraping all other validation functions. Returns public error object\n//_validateGPSData validates if the image has correct metadata. - private function\n//requires a callback due to async nature of the function\n//_validateFileSize - validates file size\n//_validateFileExtension - validates if the file has correct format - private function\n\nconst ValidateHandler = (function() {\n  const _validateGPSData = function(image, callback) {\n    EXIF.getData(image, function() {\n      let valid = EXIF.getTag(this, 'GPSLongitude') ? true : false;\n      callback(valid);\n    });\n  };\n\n  const validateFileSize = function(fileSize, fileSizeLimitKB) {\n    const fileSizeKB = fileSize / 1000;\n    return fileSizeKB <= fileSizeLimitKB;\n  };\n\n  const validateFileExtension = function(\n    fileExtension,\n    acceptableFileExtensionsArray\n  ) {\n    return acceptableFileExtensionsArray.includes(fileExtension);\n  };\n\n  //Validate image and return a object with checks in the callback\n  const validateImage = function(image, callback) {\n    const errors = {\n      hasGPSData: {\n        isCorrect: false,\n        description: 'Image uploaded does not have EXIF metadata on geolocation'\n      },\n      goodFileSize: {\n        isCorrect: false,\n        description: 'Image uploaded is to big'\n      },\n      validFileExtension: {\n        isCorrect: false,\n        description: 'Bad file format'\n      }\n    };\n\n    _validateGPSData(image, function(gpsIsValid) {\n      errors.hasGPSData.isCorrect = gpsIsValid;\n      errors.goodFileSize.isCorrect = validateFileSize(image.size, 1000);\n      errors.validFileExtension.isCorrect = validateFileExtension(image.type, [\n        'image/jpeg'\n      ]);\n      callback(errors);\n    });\n  };\n\n  return {\n    validateImage: validateImage,\n    validateFileSize: validateFileSize,\n    validateFileExtension: validateFileExtension\n  };\n})();\n\nmodule.exports = ValidateHandler;\n"]}