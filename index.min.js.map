{"version":3,"sources":["node_modules/browser-pack/_prelude.js","javascript/index.js","javascript/modules/ImageGeolocationHandler.js","javascript/modules/UploadFileHandler.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_ImageGeolocationHandler","_interopRequireDefault","_UploadFileHandler","UIinput","document","querySelector","UIoutput","uploadImage","removeImage","ImageGeolocationHandler","toDecimal","number","numerator","denominator","returnLongLat","imgHTMLElement","callback","EXIF","getData","longitude","getTag","this","latitude","longLat","UploadFileHandler","singleImageTemplate","fileObject","pictureInfoList","createElement","imageMiniature","fileName","fileExtension","fileSize","fileGeoLocation","removeButton","src","URL","createObjectURL","innerText","name","type","size","classList","add","onload","console","log","concat","appendChild","imageUploadHandler","fileInput","outputContainer","addEventListener","event","Array","from","target","files","forEach","file","removeImageHandler","imagesContainer","className","parentElement","remove"],"mappings":"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","file":"index.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import ImageGeolocationHandler from './modules/ImageGeolocationHandler';\nimport UploadFileHandler from './modules/UploadFileHandler';\n\nconst UIinput = document.querySelector('#upload-file__image');\nconst UIoutput = document.querySelector('#upload-preview');\nUploadFileHandler.uploadImage(UIinput, UIoutput);\nUploadFileHandler.removeImage(UIoutput)\n\n\n\n","//Module getting the geolocation of the image\n    //Accepts image and a callback function that handles the data return\n\nconst ImageGeolocationHandler = (function(){\n    //Helper function returning longitude and latitude as a float\n    const toDecimal = function (number) {\n        return number[0].numerator + number[1].numerator /\n            (60 * number[1].denominator) + number[2].numerator / (3600 * number[2].denominator);\n    };\n\n    function returnLongLat(imgHTMLElement, callback){\n        //function accepting the image and callback returning the data\n        EXIF.getData(imgHTMLElement, function(){\n\n            let longitude = toDecimal(EXIF.getTag(this,'GPSLongitude'));\n            let latitude = toDecimal(EXIF.getTag(this, 'GPSLatitude')); \n            \n            const longLat = {\n                longitude: longitude,\n                latitude: latitude\n            }   \n\n            callback(longLat)\n        })\n    }\n\n    //Public functions\n    return {\n        returnLongLat: returnLongLat \n    }\n\n})();\n\nexport default ImageGeolocationHandler;","//Modeule handling image upload and getting all information\nimport ImageGeolocationHandler from './ImageGeolocationHandler';\n\nconst UploadFileHandler = (function(ImageGeolocationHandler){\n    \n    function singleImageTemplate(fileObject){             \n        //Create DOM elements\n        const pictureInfoList = document.createElement('ul');\n            const imageMiniature = document.createElement('img');\n            const fileName = document.createElement('li');\n            const fileExtension = document.createElement('li');\n            const fileSize = document.createElement('li');\n            let fileGeoLocation = document.createElement('li');\n            const removeButton = document.createElement('li');\n\n        //Update DOM elements with data\n        imageMiniature.src = URL.createObjectURL(fileObject);\n        fileName.innerText = fileObject.name;\n        fileExtension.innerText = fileObject.type;\n        fileSize.innerText = fileObject.size;\n        removeButton.innerText = 'remove item';\n            removeButton.classList.add('btn-remove')\n        \n        imageMiniature.onload = function(){\n            ImageGeolocationHandler.returnLongLat(imageMiniature, function(longLat){\n                console.log(longLat.longitude)\n                fileGeoLocation.innerText = `Picture was taken on longitude: ${longLat.longitude}, and latitude: ${longLat.latitude}`\n            })\n        }\n\n        //Update the parent list\n        pictureInfoList.appendChild(imageMiniature);\n        pictureInfoList.appendChild(fileName);\n        pictureInfoList.appendChild(fileExtension);\n        pictureInfoList.appendChild(fileSize);\n        pictureInfoList.appendChild(fileGeoLocation);\n        pictureInfoList.appendChild(removeButton);\n\n        return pictureInfoList;\n    }\n\n    function imageUploadHandler(fileInput, outputContainer){\n        //Add on change event handler to upload image to website\n        fileInput.addEventListener('change', function(event){\n            const fileInput = Array.from(event.target.files); \n            fileInput.forEach(function(file){\n                //Create single uploaded image and add metadata    \n                outputContainer.appendChild(singleImageTemplate(file));\n            })\n        })\n    }\n\n    function removeImageHandler(imagesContainer){\n        imagesContainer.addEventListener('click', function(event){\n            console.log(event.target.className)\n            if(event.target.className === \"btn-remove\"){\n                event.target.parentElement.remove()\n            }\n        })\n    }\n    \n    return{\n        uploadImage: imageUploadHandler,\n        removeImage: removeImageHandler,\n        singleImageTemplate: singleImageTemplate\n    }\n})(ImageGeolocationHandler)\n\n\nexport default UploadFileHandler;"]}